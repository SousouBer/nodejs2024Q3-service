volumes:
  postgres-data:
  logs-data:

networks:
  nestjs-postgresdb-network:
    driver: bridge

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_started
    networks:
      - nestjs-postgresdb-network
    restart: always
    env_file:
      - .env
    environment:
      - PORT=${PORT}
      - DATABASE_URL=${DATABASE_URL}
    ports:
      - ${PORT}:${PORT}
    volumes:
      - /usr/src/app/node_modules
      - ./src:/usr/src/app/src
      - ./logs:/usr/src/app/logs
  postgres:
    image: postgres:14.13-alpine
    networks:
      - nestjs-postgresdb-network
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    expose:
      - ${PORT}
    command:
      - '-c'
      - 'logging_collector=on'
      - '-c'
      - 'log_directory=logs'
      - '-c'
      - 'log_statement=all'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d home_library']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - logs-data:/var/log/postgres
